// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"errors"
	"github.com/emailbob/pulumi-twingate/sdk/go/twingate/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated: twingate.index/resource.Resource has been deprecated in favor of twingate.index/twingateresource.TwingateResource
type Resource struct {
	pulumi.CustomResourceState

	// Restrict access to certain groups or service accounts
	Access ResourceAccessPtrOutput `pulumi:"access"`
	// The Resource's IP/CIDR or FQDN/DNS zone
	Address pulumi.StringOutput `pulumi:"address"`
	// Set a DNS alias address for the Resource. Must be a DNS-valid name string.
	Alias pulumi.StringPtrOutput `pulumi:"alias"`
	// Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to
	// `false`, assignments made outside of Terraform will be ignored.
	IsAuthoritative pulumi.BoolOutput `pulumi:"isAuthoritative"`
	// Controls whether an "Open in Browser" shortcut will be shown for this Resource in the Twingate Client.
	IsBrowserShortcutEnabled pulumi.BoolOutput `pulumi:"isBrowserShortcutEnabled"`
	// Controls whether this Resource will be visible in the main Resource list in the Twingate Client.
	IsVisible pulumi.BoolOutput `pulumi:"isVisible"`
	// The name of the Resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no
	// restriction, and all protocols and ports are allowed.
	Protocols ResourceProtocolsPtrOutput `pulumi:"protocols"`
	// Remote Network ID where the Resource lives
	RemoteNetworkId pulumi.StringOutput `pulumi:"remoteNetworkId"`
}

// NewResource registers a new resource with the given unique name, arguments, and options.
func NewResource(ctx *pulumi.Context,
	name string, args *ResourceArgs, opts ...pulumi.ResourceOption) (*Resource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.RemoteNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'RemoteNetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Resource
	err := ctx.RegisterResource("twingate:index/resource:Resource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResource gets an existing Resource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceState, opts ...pulumi.ResourceOption) (*Resource, error) {
	var resource Resource
	err := ctx.ReadResource("twingate:index/resource:Resource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Resource resources.
type resourceState struct {
	// Restrict access to certain groups or service accounts
	Access *ResourceAccess `pulumi:"access"`
	// The Resource's IP/CIDR or FQDN/DNS zone
	Address *string `pulumi:"address"`
	// Set a DNS alias address for the Resource. Must be a DNS-valid name string.
	Alias *string `pulumi:"alias"`
	// Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to
	// `false`, assignments made outside of Terraform will be ignored.
	IsAuthoritative *bool `pulumi:"isAuthoritative"`
	// Controls whether an "Open in Browser" shortcut will be shown for this Resource in the Twingate Client.
	IsBrowserShortcutEnabled *bool `pulumi:"isBrowserShortcutEnabled"`
	// Controls whether this Resource will be visible in the main Resource list in the Twingate Client.
	IsVisible *bool `pulumi:"isVisible"`
	// The name of the Resource
	Name *string `pulumi:"name"`
	// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no
	// restriction, and all protocols and ports are allowed.
	Protocols *ResourceProtocols `pulumi:"protocols"`
	// Remote Network ID where the Resource lives
	RemoteNetworkId *string `pulumi:"remoteNetworkId"`
}

type ResourceState struct {
	// Restrict access to certain groups or service accounts
	Access ResourceAccessPtrInput
	// The Resource's IP/CIDR or FQDN/DNS zone
	Address pulumi.StringPtrInput
	// Set a DNS alias address for the Resource. Must be a DNS-valid name string.
	Alias pulumi.StringPtrInput
	// Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to
	// `false`, assignments made outside of Terraform will be ignored.
	IsAuthoritative pulumi.BoolPtrInput
	// Controls whether an "Open in Browser" shortcut will be shown for this Resource in the Twingate Client.
	IsBrowserShortcutEnabled pulumi.BoolPtrInput
	// Controls whether this Resource will be visible in the main Resource list in the Twingate Client.
	IsVisible pulumi.BoolPtrInput
	// The name of the Resource
	Name pulumi.StringPtrInput
	// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no
	// restriction, and all protocols and ports are allowed.
	Protocols ResourceProtocolsPtrInput
	// Remote Network ID where the Resource lives
	RemoteNetworkId pulumi.StringPtrInput
}

func (ResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceState)(nil)).Elem()
}

type resourceArgs struct {
	// Restrict access to certain groups or service accounts
	Access *ResourceAccess `pulumi:"access"`
	// The Resource's IP/CIDR or FQDN/DNS zone
	Address string `pulumi:"address"`
	// Set a DNS alias address for the Resource. Must be a DNS-valid name string.
	Alias *string `pulumi:"alias"`
	// Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to
	// `false`, assignments made outside of Terraform will be ignored.
	IsAuthoritative *bool `pulumi:"isAuthoritative"`
	// Controls whether an "Open in Browser" shortcut will be shown for this Resource in the Twingate Client.
	IsBrowserShortcutEnabled *bool `pulumi:"isBrowserShortcutEnabled"`
	// Controls whether this Resource will be visible in the main Resource list in the Twingate Client.
	IsVisible *bool `pulumi:"isVisible"`
	// The name of the Resource
	Name *string `pulumi:"name"`
	// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no
	// restriction, and all protocols and ports are allowed.
	Protocols *ResourceProtocols `pulumi:"protocols"`
	// Remote Network ID where the Resource lives
	RemoteNetworkId string `pulumi:"remoteNetworkId"`
}

// The set of arguments for constructing a Resource resource.
type ResourceArgs struct {
	// Restrict access to certain groups or service accounts
	Access ResourceAccessPtrInput
	// The Resource's IP/CIDR or FQDN/DNS zone
	Address pulumi.StringInput
	// Set a DNS alias address for the Resource. Must be a DNS-valid name string.
	Alias pulumi.StringPtrInput
	// Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to
	// `false`, assignments made outside of Terraform will be ignored.
	IsAuthoritative pulumi.BoolPtrInput
	// Controls whether an "Open in Browser" shortcut will be shown for this Resource in the Twingate Client.
	IsBrowserShortcutEnabled pulumi.BoolPtrInput
	// Controls whether this Resource will be visible in the main Resource list in the Twingate Client.
	IsVisible pulumi.BoolPtrInput
	// The name of the Resource
	Name pulumi.StringPtrInput
	// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no
	// restriction, and all protocols and ports are allowed.
	Protocols ResourceProtocolsPtrInput
	// Remote Network ID where the Resource lives
	RemoteNetworkId pulumi.StringInput
}

func (ResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceArgs)(nil)).Elem()
}

type ResourceInput interface {
	pulumi.Input

	ToResourceOutput() ResourceOutput
	ToResourceOutputWithContext(ctx context.Context) ResourceOutput
}

func (*Resource) ElementType() reflect.Type {
	return reflect.TypeOf((**Resource)(nil)).Elem()
}

func (i *Resource) ToResourceOutput() ResourceOutput {
	return i.ToResourceOutputWithContext(context.Background())
}

func (i *Resource) ToResourceOutputWithContext(ctx context.Context) ResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOutput)
}

// ResourceArrayInput is an input type that accepts ResourceArray and ResourceArrayOutput values.
// You can construct a concrete instance of `ResourceArrayInput` via:
//
//	ResourceArray{ ResourceArgs{...} }
type ResourceArrayInput interface {
	pulumi.Input

	ToResourceArrayOutput() ResourceArrayOutput
	ToResourceArrayOutputWithContext(context.Context) ResourceArrayOutput
}

type ResourceArray []ResourceInput

func (ResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Resource)(nil)).Elem()
}

func (i ResourceArray) ToResourceArrayOutput() ResourceArrayOutput {
	return i.ToResourceArrayOutputWithContext(context.Background())
}

func (i ResourceArray) ToResourceArrayOutputWithContext(ctx context.Context) ResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceArrayOutput)
}

// ResourceMapInput is an input type that accepts ResourceMap and ResourceMapOutput values.
// You can construct a concrete instance of `ResourceMapInput` via:
//
//	ResourceMap{ "key": ResourceArgs{...} }
type ResourceMapInput interface {
	pulumi.Input

	ToResourceMapOutput() ResourceMapOutput
	ToResourceMapOutputWithContext(context.Context) ResourceMapOutput
}

type ResourceMap map[string]ResourceInput

func (ResourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Resource)(nil)).Elem()
}

func (i ResourceMap) ToResourceMapOutput() ResourceMapOutput {
	return i.ToResourceMapOutputWithContext(context.Background())
}

func (i ResourceMap) ToResourceMapOutputWithContext(ctx context.Context) ResourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMapOutput)
}

type ResourceOutput struct{ *pulumi.OutputState }

func (ResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Resource)(nil)).Elem()
}

func (o ResourceOutput) ToResourceOutput() ResourceOutput {
	return o
}

func (o ResourceOutput) ToResourceOutputWithContext(ctx context.Context) ResourceOutput {
	return o
}

// Restrict access to certain groups or service accounts
func (o ResourceOutput) Access() ResourceAccessPtrOutput {
	return o.ApplyT(func(v *Resource) ResourceAccessPtrOutput { return v.Access }).(ResourceAccessPtrOutput)
}

// The Resource's IP/CIDR or FQDN/DNS zone
func (o ResourceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *Resource) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Set a DNS alias address for the Resource. Must be a DNS-valid name string.
func (o ResourceOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Resource) pulumi.StringPtrOutput { return v.Alias }).(pulumi.StringPtrOutput)
}

// Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to
// `false`, assignments made outside of Terraform will be ignored.
func (o ResourceOutput) IsAuthoritative() pulumi.BoolOutput {
	return o.ApplyT(func(v *Resource) pulumi.BoolOutput { return v.IsAuthoritative }).(pulumi.BoolOutput)
}

// Controls whether an "Open in Browser" shortcut will be shown for this Resource in the Twingate Client.
func (o ResourceOutput) IsBrowserShortcutEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Resource) pulumi.BoolOutput { return v.IsBrowserShortcutEnabled }).(pulumi.BoolOutput)
}

// Controls whether this Resource will be visible in the main Resource list in the Twingate Client.
func (o ResourceOutput) IsVisible() pulumi.BoolOutput {
	return o.ApplyT(func(v *Resource) pulumi.BoolOutput { return v.IsVisible }).(pulumi.BoolOutput)
}

// The name of the Resource
func (o ResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Resource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no
// restriction, and all protocols and ports are allowed.
func (o ResourceOutput) Protocols() ResourceProtocolsPtrOutput {
	return o.ApplyT(func(v *Resource) ResourceProtocolsPtrOutput { return v.Protocols }).(ResourceProtocolsPtrOutput)
}

// Remote Network ID where the Resource lives
func (o ResourceOutput) RemoteNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *Resource) pulumi.StringOutput { return v.RemoteNetworkId }).(pulumi.StringOutput)
}

type ResourceArrayOutput struct{ *pulumi.OutputState }

func (ResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Resource)(nil)).Elem()
}

func (o ResourceArrayOutput) ToResourceArrayOutput() ResourceArrayOutput {
	return o
}

func (o ResourceArrayOutput) ToResourceArrayOutputWithContext(ctx context.Context) ResourceArrayOutput {
	return o
}

func (o ResourceArrayOutput) Index(i pulumi.IntInput) ResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Resource {
		return vs[0].([]*Resource)[vs[1].(int)]
	}).(ResourceOutput)
}

type ResourceMapOutput struct{ *pulumi.OutputState }

func (ResourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Resource)(nil)).Elem()
}

func (o ResourceMapOutput) ToResourceMapOutput() ResourceMapOutput {
	return o
}

func (o ResourceMapOutput) ToResourceMapOutputWithContext(ctx context.Context) ResourceMapOutput {
	return o
}

func (o ResourceMapOutput) MapIndex(k pulumi.StringInput) ResourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Resource {
		return vs[0].(map[string]*Resource)[vs[1].(string)]
	}).(ResourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceInput)(nil)).Elem(), &Resource{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceArrayInput)(nil)).Elem(), ResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceMapInput)(nil)).Elem(), ResourceMap{})
	pulumi.RegisterOutputType(ResourceOutput{})
	pulumi.RegisterOutputType(ResourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceMapOutput{})
}
